apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-scraper-amazon
spec:
  selector:
    matchLabels:
      service-name: api-scraper-amazon
  replicas: 2
  template:
    metadata:
      labels:
        service-name: api-scraper-amazon
    spec:
      containers:
        - name: api-scraper-amazon
          image: simo25docker/api-scraper
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: api-scraper-amazon
  labels:
    app: api-scraper-amazon
    service-name: api-scraper-amazon
spec:
  type: NodePort
  ports:
    - name: apiscraper
      port: 3000
      targetPort: 3000
  selector:
    service-name: api-scraper-amazon
---
kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  externalTrafficPolicy: Cluster
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-scraper
  annotations:
    nginx.ingress.kubernetes.io/app-root: "/*"
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
      set $agentflag 0;

      if ($http_X_RapidAPI_Proxy_Secret != "06161fa0-6c53-11ea-8373-3d02c4e8fb2f" ){
        set $agentflag 1;
      }

      if ( $agentflag = 1 ) {
        return 301 https://m.example.com;
      }
spec:
  rules:
  - http:
     paths:
      - path: /api/v1
        backend:
          serviceName: api-scraper-amazon
          servicePort: 3000
      - path: /health
        backend:
          serviceName: api-scraper-amazon
          servicePort: 3000
