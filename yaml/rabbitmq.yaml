# This headless service allows communication between RabbitMQ nodes via hostname instead of IP addresses.
# The clusterIP is set to None.
# See: https://kubernetes.io/docs/concepts/services-networking/service/#headless-services
apiVersion: v1
kind: Service
metadata:
  name: rmq-discovery
  labels:
    app: rmq
spec:
  ports:
    - name: client-access-2
      port: 5672
    - name: client-access-1
      port: 5671
    - name: clitool
      port: 25672
    - name: epmd
      port: 4369
    - name: http
      port: 15672
  selector:
    app: rmq
  type: ClusterIP
  clusterIP: None
---

# This services is used to connect to the RabbitMQ using Port Forwarding
# or expose an external IP and run RabbitMQ cluster behind a LoadBalancer.
apiVersion: v1
kind: Service
metadata:
  name: rmq-svc
  labels:
    app: rmq
spec:
  ports:
    - name: client-access-2
      port: 5672
    - name: client-access-1
      port: 5671
    - name: clitool
      port: 25672
    - name: epmd
      port: 4369
    - name: http
      port: 15672
  selector:
    app: rmq
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rmq
spec:
  selector:
    matchLabels:
      app: rmq
  serviceName: rmq-discovery
  replicas: 3
  volumeClaimTemplates:
    - metadata:
        name: rmq
        annotations:
          volume.beta.kubernetes.io/storage-class: "fast"
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 4Gi
  template:
    metadata:
      labels:
        app: rmq
    spec:
      # prevents rmq pods running on the same nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - rmq
                topologyKey: kubernetes.io/hostname
      containers:
        - name: rmq
          image: simo25docker/rabbitmq-statefulset

          lifecycle:
            preStop:
              exec:
                command: ["rabbitmqctl", "stop"]

          livenessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            exec:
              command: ["rabbitmqctl", "node_health_check"]

          readinessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 1
            failureThreshold: 10
            exec:
              command: ["rabbitmqctl", "node_health_check"]

          ports:
            - containerPort: 4369
            - containerPort: 5672
            - containerPort: 15672
            - containerPort: 25672

          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rmq
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              value: "MRJFJVJTQUMUXXHHNZZQ"
            - name: RABBITMQ_ADMIN_PASSWORD
              value: "simoCloud2020"
            - name: RABBITMQ_USERNAME
              value: "scraper"
            - name: RABBITMQ_PASSWORD
              value: "scraper-password"
            - name: RABBITMQ_VHOST
              value: 'scraper'
            - name: CLUSTERED
              value: "true"
            - name: CLUSTER_WITH
              value: "rmq-0.rmq-discovery.default.svc.cluster.local"
            - name: RABBITMQ_SERVICE_DOMAIN
              value: ".rmq-discovery.default.svc.cluster.local"
            - name: RABBITMQ_USE_LONGNAME
              value: 'true'
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: RABBITMQ_NODENAME
              value: 'rabbit@$(MY_POD_NAME).rmq-discovery.default.svc.cluster.local'
            - name: K8S_SERVICE_NAME
              value: 'rmq-discovery'
            - name: K8S_HOSTNAME_SUFFIX
              value: '.rmq-discovery.default.svc.cluster.local'







